spring.application.name=currency-exchange
spring.config.import=optional:configserver:http://localhost:8888
server.port=8000


spring.jpa.show-sql=true
spring.datasource.url= jdbc:h2:mem:testdb;

spring.datasource.driverClassName=org.h2.Driver
spring.h2.console.enabled=true
spring.sql.init.data-locations= classpath:/static/data.sql
spring.jpa.defer-datasource-initialization=true

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# resilience4j config

#resilience4j.retry.instance.PERSONALIZED NAME IN ANNOTATION "RETRY".maxRetryAttempts = n° retries
# maxRetryAttempts is deprecated and will be removed in future versions
resilience4j.retry.instances.sample-api.max-attempts = 5

# define the time to wait before retrying the call
resilience4j.retry.instances.sample-api.wait-duration = 1s

# exponential backoff strategy define exponential time to wait before retrying the call
resilience4j.retry.instances.sample-api.enable-exponential-backoff=true



# circuit breaker config
# in case of failure the 90% of the calls , the circuit breaker will open for a period of time
# resilience4j.circuit-breaker.instances.sample-api.failure-rate-threshold=90


# Rate Limiter
# these configurations allow max 2 calls per 10 seconds
resilience4j.ratelimiter.instances.default.limit-for-period=2
resilience4j.ratelimiter.instances.default.limit-refresh-period = 10s


# Bulkhead
# these configurations allow max 2 calls per 10 seconds
resilience4j.bulkhead.instances.default.max-concurrent-calls = 10

# will be track all the calls ( ex: 0.1 = 10% of the calls will be tracked)
#Not recommended in production environment because it will impact the performance
spring.sleuth.sampler.probability=1.0


